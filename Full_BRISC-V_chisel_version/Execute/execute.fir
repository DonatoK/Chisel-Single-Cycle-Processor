;buildInfoPackage: chisel3, version: 3.1.2, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-07-25 16:52:17.431, builtAtMillis: 1532537537431
circuit execute : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ALU_Control : UInt<6>, flip operand_A : UInt<32>, flip operand_B : UInt<32>, zero : UInt<1>, branch : UInt<1>, ALU_Result : UInt<32>}
    
    node shift_amount = bits(io.operand_B, 4, 0) @[ALU.scala 19:34]
    node _T_18 = eq(io.ALU_Result, UInt<1>("h00")) @[ALU.scala 21:31]
    io.zero <= _T_18 @[ALU.scala 21:13]
    node _T_19 = bits(io.ALU_Control, 4, 3) @[ALU.scala 22:32]
    node _T_21 = eq(_T_19, UInt<2>("h02")) @[ALU.scala 22:38]
    node _T_23 = eq(io.ALU_Result, UInt<1>("h01")) @[ALU.scala 22:66]
    node _T_24 = and(_T_21, _T_23) @[ALU.scala 22:49]
    io.branch <= _T_24 @[ALU.scala 22:13]
    node _T_26 = eq(io.ALU_Control, UInt<1>("h00")) @[ALU.scala 25:24]
    when _T_26 : @[ALU.scala 25:37]
      node _T_27 = add(io.operand_A, io.operand_B) @[ALU.scala 26:35]
      node _T_28 = tail(_T_27, 1) @[ALU.scala 26:35]
      io.ALU_Result <= _T_28 @[ALU.scala 26:19]
      skip @[ALU.scala 25:37]
    else : @[ALU.scala 27:44]
      node _T_30 = eq(io.ALU_Control, UInt<4>("h08")) @[ALU.scala 27:31]
      when _T_30 : @[ALU.scala 27:44]
        node _T_31 = sub(io.operand_A, io.operand_B) @[ALU.scala 28:35]
        node _T_32 = asUInt(_T_31) @[ALU.scala 28:35]
        node _T_33 = tail(_T_32, 1) @[ALU.scala 28:35]
        io.ALU_Result <= _T_33 @[ALU.scala 28:19]
        skip @[ALU.scala 27:44]
      else : @[ALU.scala 29:44]
        node _T_35 = eq(io.ALU_Control, UInt<3>("h04")) @[ALU.scala 29:31]
        when _T_35 : @[ALU.scala 29:44]
          node _T_36 = xor(io.operand_A, io.operand_B) @[ALU.scala 30:35]
          io.ALU_Result <= _T_36 @[ALU.scala 30:19]
          skip @[ALU.scala 29:44]
        else : @[ALU.scala 31:44]
          node _T_38 = eq(io.ALU_Control, UInt<3>("h06")) @[ALU.scala 31:31]
          when _T_38 : @[ALU.scala 31:44]
            node _T_39 = or(io.operand_A, io.operand_B) @[ALU.scala 32:35]
            io.ALU_Result <= _T_39 @[ALU.scala 32:19]
            skip @[ALU.scala 31:44]
          else : @[ALU.scala 33:44]
            node _T_41 = eq(io.ALU_Control, UInt<3>("h07")) @[ALU.scala 33:31]
            when _T_41 : @[ALU.scala 33:44]
              node _T_42 = and(io.operand_A, io.operand_B) @[ALU.scala 34:35]
              io.ALU_Result <= _T_42 @[ALU.scala 34:19]
              skip @[ALU.scala 33:44]
            else : @[ALU.scala 35:44]
              node _T_44 = eq(io.ALU_Control, UInt<2>("h02")) @[ALU.scala 35:31]
              when _T_44 : @[ALU.scala 35:44]
                node _T_45 = lt(io.operand_A, io.operand_B) @[ALU.scala 36:35]
                io.ALU_Result <= _T_45 @[ALU.scala 36:19]
                skip @[ALU.scala 35:44]
              else : @[ALU.scala 37:43]
                node _T_47 = eq(io.ALU_Control, UInt<2>("h03")) @[ALU.scala 37:31]
                when _T_47 : @[ALU.scala 37:43]
                  node _T_48 = lt(io.operand_A, io.operand_B) @[ALU.scala 38:35]
                  io.ALU_Result <= _T_48 @[ALU.scala 38:19]
                  skip @[ALU.scala 37:43]
                else : @[ALU.scala 39:43]
                  node _T_50 = eq(io.ALU_Control, UInt<1>("h01")) @[ALU.scala 39:31]
                  when _T_50 : @[ALU.scala 39:43]
                    node _T_51 = dshl(io.operand_A, shift_amount) @[ALU.scala 40:35]
                    io.ALU_Result <= _T_51 @[ALU.scala 40:19]
                    skip @[ALU.scala 39:43]
                  else : @[ALU.scala 41:43]
                    node _T_53 = eq(io.ALU_Control, UInt<3>("h05")) @[ALU.scala 41:31]
                    when _T_53 : @[ALU.scala 41:43]
                      node _T_54 = dshr(io.operand_A, shift_amount) @[ALU.scala 42:34]
                      io.ALU_Result <= _T_54 @[ALU.scala 42:18]
                      skip @[ALU.scala 41:43]
                    else : @[ALU.scala 43:43]
                      node _T_56 = eq(io.ALU_Control, UInt<4>("h0d")) @[ALU.scala 43:31]
                      when _T_56 : @[ALU.scala 43:43]
                        node _T_57 = dshr(io.operand_A, shift_amount) @[ALU.scala 44:34]
                        io.ALU_Result <= _T_57 @[ALU.scala 44:18]
                        skip @[ALU.scala 43:43]
                      else : @[ALU.scala 45:43]
                        node _T_59 = eq(io.ALU_Control, UInt<5>("h01f")) @[ALU.scala 45:31]
                        when _T_59 : @[ALU.scala 45:43]
                          node _T_61 = add(io.operand_A, UInt<3>("h04")) @[ALU.scala 46:35]
                          node _T_62 = tail(_T_61, 1) @[ALU.scala 46:35]
                          io.ALU_Result <= _T_62 @[ALU.scala 46:19]
                          skip @[ALU.scala 45:43]
                        else : @[ALU.scala 47:43]
                          node _T_64 = eq(io.ALU_Control, UInt<5>("h010")) @[ALU.scala 47:31]
                          when _T_64 : @[ALU.scala 47:43]
                            node _T_65 = eq(io.operand_A, io.operand_B) @[ALU.scala 48:35]
                            io.ALU_Result <= _T_65 @[ALU.scala 48:19]
                            skip @[ALU.scala 47:43]
                          else : @[ALU.scala 49:43]
                            node _T_67 = eq(io.ALU_Control, UInt<5>("h011")) @[ALU.scala 49:31]
                            when _T_67 : @[ALU.scala 49:43]
                              node _T_68 = neq(io.operand_A, io.operand_B) @[ALU.scala 50:35]
                              io.ALU_Result <= _T_68 @[ALU.scala 50:19]
                              skip @[ALU.scala 49:43]
                            else : @[ALU.scala 51:43]
                              node _T_70 = eq(io.ALU_Control, UInt<5>("h014")) @[ALU.scala 51:31]
                              when _T_70 : @[ALU.scala 51:43]
                                node _T_71 = lt(io.operand_A, io.operand_B) @[ALU.scala 52:35]
                                io.ALU_Result <= _T_71 @[ALU.scala 52:19]
                                skip @[ALU.scala 51:43]
                              else : @[ALU.scala 53:43]
                                node _T_73 = eq(io.ALU_Control, UInt<5>("h015")) @[ALU.scala 53:31]
                                when _T_73 : @[ALU.scala 53:43]
                                  node _T_74 = geq(io.operand_A, io.operand_B) @[ALU.scala 54:34]
                                  io.ALU_Result <= _T_74 @[ALU.scala 54:18]
                                  skip @[ALU.scala 53:43]
                                else : @[ALU.scala 55:43]
                                  node _T_76 = eq(io.ALU_Control, UInt<5>("h016")) @[ALU.scala 55:31]
                                  when _T_76 : @[ALU.scala 55:43]
                                    node _T_77 = lt(io.operand_A, io.operand_B) @[ALU.scala 56:35]
                                    io.ALU_Result <= _T_77 @[ALU.scala 56:19]
                                    skip @[ALU.scala 55:43]
                                  else : @[ALU.scala 57:43]
                                    node _T_79 = eq(io.ALU_Control, UInt<5>("h017")) @[ALU.scala 57:31]
                                    when _T_79 : @[ALU.scala 57:43]
                                      node _T_80 = geq(io.operand_A, io.operand_B) @[ALU.scala 58:35]
                                      io.ALU_Result <= _T_80 @[ALU.scala 58:19]
                                      skip @[ALU.scala 57:43]
                                    else : @[ALU.scala 59:16]
                                      io.ALU_Result <= UInt<1>("h00") @[ALU.scala 60:20]
                                      skip @[ALU.scala 59:16]
    
  module execute : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip clock : UInt<1>, flip reset : UInt<1>, flip ALU_Operation : UInt<3>, flip funct3 : UInt<3>, flip funct7 : UInt<7>, flip PC : UInt<20>, flip ALU_ASrc : UInt<2>, flip ALU_BSrc : UInt<1>, flip branch_op : UInt<1>, flip regRead1 : UInt<32>, flip regRead2 : UInt<32>, flip extend : UInt<32>, ALU_Result : UInt<32>, zero : UInt<1>, branch : UInt<1>, JALR_target : UInt<20>}
    
    wire ALU_Control : UInt<6> @[execute.scala 33:25]
    wire ALU_branch : UInt<1> @[execute.scala 34:25]
    wire operand_A : UInt<32> @[execute.scala 35:25]
    wire operand_B : UInt<32> @[execute.scala 36:25]
    node _T_42 = eq(io.ALU_Operation, UInt<3>("h03")) @[execute.scala 38:27]
    when _T_42 : @[execute.scala 38:50]
      ALU_Control <= UInt<6>("h01f") @[execute.scala 39:17]
      skip @[execute.scala 38:50]
    else : @[execute.scala 40:57]
      node _T_45 = eq(io.ALU_Operation, UInt<3>("h02")) @[execute.scala 40:34]
      when _T_45 : @[execute.scala 40:57]
        node _T_46 = cat(io.ALU_Operation, io.funct3) @[Cat.scala 30:58]
        ALU_Control <= _T_46 @[execute.scala 41:17]
        skip @[execute.scala 40:57]
      else : @[execute.scala 43:99]
        node _T_48 = eq(io.ALU_Operation, UInt<3>("h00")) @[execute.scala 43:34]
        node _T_50 = eq(io.funct7, UInt<7>("h00")) @[execute.scala 43:71]
        node _T_51 = and(_T_48, _T_50) @[execute.scala 43:58]
        when _T_51 : @[execute.scala 43:99]
          node _T_52 = cat(io.ALU_Operation, io.funct3) @[Cat.scala 30:58]
          ALU_Control <= _T_52 @[execute.scala 44:17]
          skip @[execute.scala 43:99]
        else : @[execute.scala 45:99]
          node _T_54 = eq(io.ALU_Operation, UInt<3>("h00")) @[execute.scala 45:34]
          node _T_56 = eq(io.funct7, UInt<7>("h020")) @[execute.scala 45:71]
          node _T_57 = and(_T_54, _T_56) @[execute.scala 45:58]
          when _T_57 : @[execute.scala 45:99]
            node _T_59 = cat(UInt<3>("h01"), io.funct3) @[Cat.scala 30:58]
            ALU_Control <= _T_59 @[execute.scala 46:17]
            skip @[execute.scala 45:99]
          else : @[execute.scala 47:56]
            node _T_61 = eq(io.ALU_Operation, UInt<3>("h00")) @[execute.scala 47:33]
            when _T_61 : @[execute.scala 47:56]
              node _T_62 = cat(io.ALU_Operation, io.funct3) @[Cat.scala 30:58]
              ALU_Control <= _T_62 @[execute.scala 48:17]
              skip @[execute.scala 47:56]
            else : @[execute.scala 50:133]
              node _T_64 = eq(io.ALU_Operation, UInt<3>("h01")) @[execute.scala 50:34]
              node _T_66 = eq(io.funct7, UInt<7>("h00")) @[execute.scala 50:71]
              node _T_67 = and(_T_64, _T_66) @[execute.scala 50:58]
              node _T_69 = eq(io.funct3, UInt<3>("h05")) @[execute.scala 50:110]
              node _T_70 = and(_T_67, _T_69) @[execute.scala 50:98]
              when _T_70 : @[execute.scala 50:133]
                node _T_72 = cat(UInt<3>("h00"), io.funct3) @[Cat.scala 30:58]
                ALU_Control <= _T_72 @[execute.scala 51:17]
                skip @[execute.scala 50:133]
              else : @[execute.scala 52:133]
                node _T_74 = eq(io.ALU_Operation, UInt<3>("h01")) @[execute.scala 52:34]
                node _T_76 = eq(io.funct7, UInt<7>("h020")) @[execute.scala 52:71]
                node _T_77 = and(_T_74, _T_76) @[execute.scala 52:58]
                node _T_79 = eq(io.funct3, UInt<3>("h05")) @[execute.scala 52:110]
                node _T_80 = and(_T_77, _T_79) @[execute.scala 52:98]
                when _T_80 : @[execute.scala 52:133]
                  node _T_82 = cat(UInt<3>("h01"), io.funct3) @[Cat.scala 30:58]
                  ALU_Control <= _T_82 @[execute.scala 53:17]
                  skip @[execute.scala 52:133]
                else : @[execute.scala 54:96]
                  node _T_84 = eq(io.ALU_Operation, UInt<3>("h01")) @[execute.scala 54:35]
                  node _T_86 = eq(io.funct3, UInt<3>("h05")) @[execute.scala 54:72]
                  node _T_87 = and(_T_84, _T_86) @[execute.scala 54:59]
                  when _T_87 : @[execute.scala 54:96]
                    node _T_89 = cat(UInt<3>("h00"), io.funct3) @[Cat.scala 30:58]
                    ALU_Control <= _T_89 @[execute.scala 55:17]
                    skip @[execute.scala 54:96]
                  else : @[execute.scala 56:56]
                    node _T_91 = eq(io.ALU_Operation, UInt<3>("h01")) @[execute.scala 56:33]
                    when _T_91 : @[execute.scala 56:56]
                      node _T_93 = cat(UInt<3>("h00"), io.funct3) @[Cat.scala 30:58]
                      ALU_Control <= _T_93 @[execute.scala 57:17]
                      skip @[execute.scala 56:56]
                    else : @[execute.scala 58:16]
                      ALU_Control <= UInt<6>("h00") @[execute.scala 59:17]
                      skip @[execute.scala 58:16]
    node _T_96 = eq(io.ALU_ASrc, UInt<2>("h01")) @[execute.scala 62:21]
    when _T_96 : @[execute.scala 62:43]
      operand_A <= io.PC @[execute.scala 63:15]
      skip @[execute.scala 62:43]
    else : @[execute.scala 64:50]
      node _T_98 = eq(io.ALU_ASrc, UInt<2>("h02")) @[execute.scala 64:28]
      when _T_98 : @[execute.scala 64:50]
        node _T_100 = add(io.PC, UInt<3>("h04")) @[execute.scala 65:24]
        node _T_101 = tail(_T_100, 1) @[execute.scala 65:24]
        operand_A <= _T_101 @[execute.scala 65:15]
        skip @[execute.scala 64:50]
      else : @[execute.scala 66:16]
        operand_A <= io.regRead1 @[execute.scala 67:15]
        skip @[execute.scala 66:16]
    node _T_103 = eq(io.ALU_BSrc, UInt<2>("h01")) @[execute.scala 70:21]
    when _T_103 : @[execute.scala 70:43]
      operand_B <= io.extend @[execute.scala 71:15]
      skip @[execute.scala 70:43]
    else : @[execute.scala 72:16]
      operand_B <= io.regRead2 @[execute.scala 73:15]
      skip @[execute.scala 72:16]
    node _T_104 = bits(ALU_branch, 0, 0) @[execute.scala 76:20]
    node _T_105 = bits(io.branch_op, 0, 0) @[execute.scala 76:43]
    node _T_106 = and(_T_104, _T_105) @[execute.scala 76:27]
    when _T_106 : @[execute.scala 76:51]
      io.branch <= UInt<1>("h01") @[execute.scala 77:15]
      skip @[execute.scala 76:51]
    else : @[execute.scala 78:16]
      io.branch <= UInt<1>("h00") @[execute.scala 79:15]
      skip @[execute.scala 78:16]
    inst ALU0 of ALU @[execute.scala 82:19]
    ALU0.clock <= clock
    ALU0.reset <= reset
    ALU0.io.ALU_Control <= ALU_Control @[execute.scala 83:25]
    ALU0.io.operand_A <= operand_A @[execute.scala 84:25]
    ALU0.io.operand_B <= operand_B @[execute.scala 85:25]
    io.zero <= ALU0.io.zero @[execute.scala 87:19]
    ALU_branch <= ALU0.io.branch @[execute.scala 88:19]
    io.ALU_Result <= ALU0.io.ALU_Result @[execute.scala 89:19]
    node _T_109 = add(io.regRead1, io.extend) @[execute.scala 94:33]
    node _T_110 = tail(_T_109, 1) @[execute.scala 94:33]
    node _T_112 = and(_T_110, UInt<32>("h0fffffffe")) @[execute.scala 94:46]
    io.JALR_target <= _T_112 @[execute.scala 94:16]
    
